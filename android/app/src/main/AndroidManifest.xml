<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <application
        android:label="channeltalk_sample"
        android:name=".MainApplication"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
            
        <!-- 
        ====================================================================
        ChannelIO Integrated FCM Service Configuration
        ====================================================================
        
        Custom service to support both Flutter FCM and ChannelIO simultaneously.
        Disable the default FlutterFirebaseMessagingService and
        ChannelIOFirebaseMessagingService handles it instead.
        -->
        
        <!-- Register ChannelIO Integrated FCM Service -->
        <!-- 
        Set priority to 1 so this service processes FCM messages first.
        Inherits FlutterFirebaseMessagingService to maintain all Flutter FCM functionality.
        -->
        <service
            android:name=".ChannelIOFirebaseMessagingService"
            android:exported="false">
            <intent-filter android:priority="1">
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        
        <!-- Disable Default Flutter FCM Service -->
        <!--
        Since the custom service inherits FlutterFirebaseMessagingService and 
        provides all functionality, the default service is disabled.
        This prevents duplicate message processing.
        -->
        <service
            android:name="io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService"
            android:enabled="false" />
            
        <!-- FCM Default Notification Channel Setting -->
        <!-- 
        Channel ID required to display notifications on Android 8.0 (API 26) and later.
        Uses the channel ID defined in strings.xml.
        -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_channel_id"
            android:value="default_channel" />
            
        <!-- FCM Default Notification Icon Setting (Optional) -->
        <!-- 
        To use a custom notification icon, uncomment and 
        add an icon file to app/src/main/res/drawable/.
        -->
        <!-- <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@drawable/ic_stat_ic_notification" /> -->
    </application>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
    </queries>
</manifest>
